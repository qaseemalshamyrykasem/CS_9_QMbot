const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const axios = require('axios'); // ูุฅุฌุฑุงุก ุทูุจุงุช HTTP ุฅูู API ุงูุฎุงุต ุจู Telegram
const app = express();

const API_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const bot = new TelegramBot(API_TOKEN, { polling: true });

// ูุนุฑูุงุช ุงููููุงุช ุงูุฎุงุตุฉ ุจูู ูุงุฏุฉ ูุฃุณุชุงุฐ
const channels = {
    'ุฑูุงุถูุงุช': {
        'ุฏ. ูุงูู ุงูุฌุจุฑู': '@Dev_Qm_Start',
        'ุฃ. ุนููุงุก ุงูุดููุฑู': '@math_alya_channel'
    },
    'ููุฒูุงุก': {
        'ุฏ. ูุงูู ุงูุฌุจุฑู': '@physics_malek_channel',
        'ุฃ. ุนููุงุก ุงูุดููุฑู': '@physics_alya_channel'
    },
    'ููููุงุก': {
        'ุฏ. ูุงูู ุงูุฌุจุฑู': '@chemistry_malek_channel',
        'ุฃ. ุนููุงุก ุงูุดููุฑู': '@chemistry_alya_channel'
    },
    'ุจุฑูุฌุฉ': {
        'ุฏ. ูุงูู ุงูุฌุจุฑู': '@programming_malek_channel',
        'ุฃ. ุนููุงุก ุงูุดููุฑู': '@programming_alya_channel'
    }
};

// ุงูุชุนุงูู ูุน ุฃูุฑ /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const welcomeText = `โจ๐ ูุฑุญุจุงู ุจู ูู ุจูุช ุงูููุฎุตุงุช ุงูุฌุงูุนูุฉ ๐โจ\n\nุงุฎุชุฑ ุงููุณู ุงููุทููุจ ุจุงุณุชุฎุฏุงู ุงูุฃุฒุฑุงุฑ ุฃุฏูุงู.`;

    bot.sendMessage(chatId, welcomeText, {
        reply_markup: {
            keyboard: [
                [{ text: '๐ฅ๏ธ ูุณู ุนููู ุงูุญุงุณูุจ' }, { text: '๐ฌ ูุณู ุงูููููุงุก' }],
                [{ text: '๐ญ ูุณู ุงูููุฒูุงุก' }, { text: '๐งฎ ูุณู ุงูุฑูุงุถูุงุช' }],
                [{ text: '๐ ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ' }]
            ],
            resize_keyboard: true,
            one_time_keyboard: false
        }
    });
});

// ุงูุชุนุงูู ูุน ุงุฎุชูุงุฑ ุงููุงุฏุฉ ูุฅุฑุณุงู ุงูุฃุฒุฑุงุฑ ููุฃุณุชุงุฐูู
bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;

    if (channels[text]) {
        bot.sendMessage(chatId, `ุงุฎุชุฑ ุฃุณุชุงุฐ ุงููุงุฏุฉ:`, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'ุฏ. ูุงูู ุงูุฌุจุฑู', callback_data: `${text}_ูุงูู` }],
                    [{ text: 'ุฃ. ุนููุงุก ุงูุดููุฑู', callback_data: `${text}_ุนููุงุก` }],
                    [{ text: '๐ ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ', callback_data: 'back' }]
                ]
            }
        });
    } else if (text === '๐ ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ') {
        bot.sendMessage(chatId, 'ุชู ุงูุฑุฌูุน ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ.', {
            reply_markup: {
                keyboard: [
                    [{ text: '๐ฅ๏ธ ูุณู ุนููู ุงูุญุงุณูุจ' }, { text: '๐ฌ ูุณู ุงูููููุงุก' }],
                    [{ text: '๐ญ ูุณู ุงูููุฒูุงุก' }, { text: '๐งฎ ูุณู ุงูุฑูุงุถูุงุช' }],
                    [{ text: '๐ ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ' }]
                ],
                resize_keyboard: true
            }
        });
    }
});

// ุฏุงูุฉ ูุฌูุจ ุฌููุน ุงูุฑุณุงุฆู ุงูุชู ุชุญุชูู ุนูู ูููุงุช ูู ููุงุฉ ูุนููุฉ
async function getAllFilesFromChannel(channelUsername) {
    const url = `https://api.telegram.org/bot${API_TOKEN}/getUpdates`;

    try {
        const response = await axios.get(url);
        const updates = response.data.result;

        const files = [];

        // ุงูุจุญุซ ุนู ุฌููุน ุงูุฑุณุงุฆู ุงูุชู ุชุญุชูู ุนูู ูููุงุช ูู ุงูููุงุฉ ุงููุทููุจุฉ
        for (let i = 0; i < updates.length; i++) {
            const update = updates[i];
            if (update.message && update.message.chat && update.message.chat.username === channelUsername) {
                // ุชุญูู ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุชุญุชูู ุนูู ููู (ูุซููุฉ PDF)
                if (update.message.document) {
                    files.push(update.message.message_id);
                }
            }
        }

        return files;
    } catch (error) {
        console.error('Error fetching updates:', error);
    }

    return [];
}

// ุงูุชุนุงูู ูุน ุถุบุท ุฒุฑ ุงูุฃุณุชุงุฐ ูุฌูุจ ุงููููุงุช ูู ููุงุฉ ุงูุฃุณุชุงุฐ
bot.on('callback_query', async (callbackQuery) => {
    const msg = callbackQuery.message;
    const chatId = msg.chat.id;
    const data = callbackQuery.data.split('_'); // ุชุฌุฒุฆุฉ ุงููุต ููุนุฑูุฉ ุงููุงุฏุฉ ูุงูุฃุณุชุงุฐ

    if (data[1] === 'ูุงูู' || data[1] === 'ุนููุงุก') {
        const subject = data[0];
        const professor = data[1] === 'ูุงูู' ? 'ุฏ. ูุงูู ุงูุฌุจุฑู' : 'ุฃ. ุนููุงุก ุงูุดููุฑู';
        const channelUsername = channels[subject][professor];

        const fileMessageIds = await getAllFilesFromChannel(channelUsername);
        if (fileMessageIds.length > 0) {
            for (const messageId of fileMessageIds) {
                // ุฅุนุงุฏุฉ ุชูุฌูู ูู ุฑุณุงูุฉ ุชุญุชูู ุนูู ููู ูู ุงูููุงุฉ ุงูุฎุงุตุฉ
                bot.forwardMessage(chatId, channelUsername, messageId);
            }
        } else {
            bot.sendMessage(chatId, 'ูู ูุชู ุงูุนุซูุฑ ุนูู ูููุงุช ูู ุงูููุงุฉ.');
        }
    } else if (data[0] === 'back') {
        bot.sendMessage(chatId, 'ุชู ุงูุฑุฌูุน ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ.', {
            reply_markup: {
                keyboard: [
                    [{ text: '๐ฅ๏ธ ูุณู ุนููู ุงูุญุงุณูุจ' }, { text: '๐ฌ ูุณู ุงูููููุงุก' }],
                    [{ text: '๐ญ ูุณู ุงูููุฒูุงุก' }, { text: '๐งฎ ูุณู ุงูุฑูุงุถูุงุช' }],
                    [{ text: '๐ ุงูุนูุฏุฉ ุฅูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ' }]
                ],
                resize_keyboard: true
            }
        });
    }
});

// ุฅุนุฏุงุฏ ููุทุฉ ููุงูุฉ ููุฑุงูุจุฉ ุญุงูุฉ ุงูุฎุงุฏู
app.get('/', (req, res) => {
    res.send("<b>telegram @DEV_QM</b>");
});

const port = process.env.PORT || 3000;
app.listen(port, () => {
    console.log(`Server is running on port ${port}`);
});
